name: CI-CD

on: push

jobs:
  dev_to_test:
    runs-on: ubuntu-latest

    steps:
      - name: code checkout
        uses: actions/checkout@v4

      - name: setup python
        uses: actions/setup-python@v5
        with:
            python-version: 3.13.1
            cache: pip

      - name: install pacakages
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt


      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws-region: ap-south-1


      - name: dvc
        run: dvc pull

      - name: Test Model Registry
        env:
          DAGSHUB_USER_TOKEN: ${{ secrets.DAGSHUB_TOKKEN }}
        run: |
          pytest tests/test_model_registery.py


      - name: Test Model Performance
        env:
          DAGSHUB_USER_TOKEN: ${{ secrets.DAGSHUB_TOKKEN }}
        run: |
          pytest tests/test_model_performance.py


      - name: Promote Model
        if: success()
        env:
          DAGSHUB_USER_TOKEN: ${{ secrets.DAGSHUB_TOKKEN }}
        run: |
          python scripts/promote_model_to_prod.py


      
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2



      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: ${{ secrets.ECR_REPO_URI }}
          IMAGE_TAG: v1
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG